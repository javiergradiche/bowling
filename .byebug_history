c
player.frames
player.name
player
c
player.frames
player.frames.map {|f| format_falls(f)}
c
n
up
s
up
s
up
s
up
s
up
s
up
out
s
c
player.frames
c
frame.finished?
frame.finished/
c
frame
frame.finished?
c
exit
frame.finished?
frame = player.frames[9]
player.frames[9].strike?
player.frames[9].finished?
player.frames[9].finished/
player.frames[9]
player.frames.last
player.frames
players.frames
players.frames.last
c
frames[2]
frames[1]
frames[0]
c
s
n
s
c
self.strike? && !first_next_frame.strike?
n
self.strike? && first_next_frame.strike?
self.strike? && !first_next_frame.strike?
n
s
n
calculate_score_second_next(first_next_frame, second_next_frame)
calculate_score_first_next(first_next_frame)
n
@score
n
s
@frame3
@frame2
@frame1
c
n
c
first_next_frame.spare?
n
first_next_frame.second_bowl
first_next_frame.strike?
n
s
n
first_next_frame.first_bowl
v
s
second_next_frame
first_next_frame
first_next_framw
first_next_time
n
last?
n
acum_score
bowls_score
s
c
exit
e
c
lc
acum_score
up
bowls_score + first_next_score + second_next_score
c
n
bowls_score + first_next_score + second_next_score
first_next_frame.bowls_score
first_next_frame.score
first_next_frame.valid?
first_next_frame
self
this
@position
c
player.frames.count
c
player.pinfalls
frames[3]
frames[1]
frames[8]
frames[9]
frames[0]
frames
c
values
name
c
values
name
c
value
name
c
game.class
game
game.valid?
game
c
